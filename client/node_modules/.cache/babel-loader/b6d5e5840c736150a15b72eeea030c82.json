{"ast":null,"code":"var _jsxFileName = \"/Users/lsh/Desktop/react/movie-board/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PORT = process.env.PORT ? process.env.PORT : 3000;\n\nfunction App() {\n  _s();\n\n  const [movieName, setMovieName] = useState('');\n  const [review, setReview] = useState('');\n  const [movieReviewList, setMovieList] = useState([]);\n  const [newReview, setNewReview] = useState(\"\");\n  useEffect(() => {\n    Axios.get(`http://localhost:${PORT}/api/get`).then(response => {\n      setMovieList(response.data);\n    });\n  }, []);\n\n  const submitReview = () => {\n    Axios.post(`http://localhost:${PORT}/api/insert`, {\n      movieName: movieName,\n      movieReview: review\n    });\n    setMovieList([...movieReviewList, {\n      movieName: movieName,\n      movieReview: review\n    }]);\n  };\n\n  const deleteReview = movie => {\n    Axios.delete(`http://localhost:${PORT}/api/delete/${movie}`);\n  };\n\n  const updateReview = movie => {\n    Axios.put(`http://localhost:${PORT}/api/update`, {\n      movieName: movie,\n      movieReview: newReview\n    });\n    setNewReview(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CRUD MOVIES\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Movie Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"movieName\",\n        onChange: e => {\n          setMovieName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Review:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"review\",\n        onChange: e => {\n          setReview(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitReview,\n        id: \"submitBtn\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), movieReviewList.map(val => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: val.movieName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: val.movieReview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              deleteReview(val.movieName);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"updateInput\",\n            onChange: e => {\n              setNewReview(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              updateReview(val.movieName);\n            },\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"1oOsYUK7Fk3dU7q0PnMNR7Gjb4Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lsh/Desktop/react/movie-board/client/src/App.js"],"names":["React","useState","useEffect","Axios","PORT","process","env","App","movieName","setMovieName","review","setReview","movieReviewList","setMovieList","newReview","setNewReview","get","then","response","data","submitReview","post","movieReview","deleteReview","movie","delete","updateReview","put","e","target","value","map","val"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport Axios from 'axios';\n\nconst PORT = process.env.PORT ? process.env.PORT : 3000;\n\nfunction App() {\n\n  const [movieName, setMovieName] = useState('');\n  const [review, setReview] = useState('');\n  const [movieReviewList, setMovieList] = useState([]);\n\n  const [newReview, setNewReview] = useState(\"\");\n\n  useEffect(()=> {\n    Axios.get(`http://localhost:${PORT}/api/get`).then((response)=>{\n      setMovieList(response.data)\n    })\n  }, [])\n\n  const submitReview = () => {\n    Axios.post(`http://localhost:${PORT}/api/insert`, {\n      movieName: movieName, \n      movieReview: review\n    });\n\n      setMovieList([\n        ...movieReviewList,\n        {movieName: movieName, movieReview: review },\n      ]);\n  };\n\n  const deleteReview = (movie) => {\n    Axios.delete(`http://localhost:${PORT}/api/delete/${movie}`);\n  };\n\n  const updateReview = (movie) => {\n    Axios.put(`http://localhost:${PORT}/api/update`, {\n      movieName: movie, \n      movieReview: newReview,\n    });\n    setNewReview(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>CRUD MOVIES</h1>\n\n      <div className=\"form\">\n\n        <label>Movie Name:</label>\n        <input type=\"text\" name=\"movieName\" onChange={(e)=>{\n          setMovieName(e.target.value)\n        }}\n        />\n        <label>Review:</label>\n        <input type=\"text\" name=\"review\" onChange={(e)=>{\n          setReview(e.target.value)\n        }}\n        />\n \n        <button onClick={submitReview} id=\"submitBtn\">Submit</button>\n\n        {movieReviewList.map((val)=>{\n          return (\n            <div className=\"card\">\n              <h1>{val.movieName}</h1>\n              <p>{val.movieReview}</p>\n\n              <button onClick={ () => {deleteReview(val.movieName)}}>Delete</button>\n              <input type=\"text\" id=\"updateInput\" onChange={(e) => {\n                setNewReview(e.target.value)\n              }}/>\n              <button onClick={()=>{updateReview(val.movieName)}}>Update</button>\n            </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}